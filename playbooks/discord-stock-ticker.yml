---
- name: Install discord-stock-ticker
  hosts: oc
  become: yes

  tasks:

    # - name: install sqlite3
    #   package:
    #     name: sqlite3
    #     state: latest
    #     update_cache: yes

    - name: install pip3
      package:
        name: python3-pip
        state: latest
        update_cache: yes
      when: pull

    - name: Install boto3
      pip:
        name: boto3
      when: pull

    - name: create dst dir
      file: 
        state: directory
        path: /etc/discord-stock-ticker
        owner: root
        group: root

    - name: Download dst
      get_url:
        url: "https://github.com/rssnyder/discord-stock-ticker/releases/download/{{ ticker_version }}/discord-stock-ticker_{{ ticker_version }}_linux_{{ arch }}.tar.gz"
        dest: "/etc/discord-stock-ticker-{{ ticker_version }}.tar.gz"
        mode: '0700'

    - name: Extract dst
      unarchive:
        remote_src: yes
        src: "/etc/discord-stock-ticker-{{ ticker_version }}.tar.gz"
        dest: /etc/discord-stock-ticker/
    
    - name: copy service config
      template: 
        src: dst.service.j2
        dest: "/etc/systemd/system/{{ item.key }}.service"
      loop: "{{ clients | dict2items }}"
      when: client is not defined or item.key == client
    
    - name: Pull state
      amazon.aws.aws_s3:
        s3_url: "{{ s3.host }}"
        aws_access_key: "{{ s3.access_key }}"
        aws_secret_key: "{{ s3.secret_key }}"
        encrypt: no
        bucket: discord-stock-ticker
        object: "database/{{ item.key }}.state"
        dest: "/etc/discord-stock-ticker/{{ item.key }}.state"
        mode: get
      loop: "{{ clients | dict2items }}"
      when: pull
      
    - name: Start dst
      systemd:
        state: restarted
        name: "{{ item.key }}.service"
        daemon_reload: yes
      loop: "{{ clients | dict2items }}"
      loop_control:
        pause: 3
      when: client is not defined or item.key == client
    
    # upgrade for 3.11.0
    # - name: inject gas apiToken
    #   shell:
    #     cmd: |
    #       sqlite3 /etc/discord-stock-ticker/{{ item.key }}.state 'update gases set apiToken = "{{ zapper_token }}" where network = "binance-smart-chain"'
    #       sqlite3 /etc/discord-stock-ticker/{{ item.key }}.state 'update gases set apiToken = "{{ zapper_token }}" where network = "polygon"'
    #   loop: "{{ clients | dict2items }}"
    #   when: client is not defined or item.key == client

    # - name: Start dst
    #   systemd:
    #     state: restarted
    #     name: "{{ item.key }}.service"
    #     daemon_reload: yes
    #   loop: "{{ clients | dict2items }}"
    #   loop_control:
    #     pause: 3
    #   when: client is not defined or item.key == client

    - name: restart journalctl
      systemd:
        state: restarted
        name: systemd-journald