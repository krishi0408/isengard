---
version: "3"
services:

  gluetun:
    image: qmcgaw/gluetun
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp
      - 8388:8388/tcp
      - 8388:8388/udp
      - 8475:8475 # qbt
    volumes:
      - $APPDATA/gluetun:/gluetun
    environment:
      VPN_SERVICE_PROVIDER: private internet access
      VPN_TYPE: openvpn
      OPENVPN_USER: "${VPN_USER}"
      OPENVPN_PASSWORD: "${VPN_PASS}"
      SERVER_REGIONS: Netherlands

  plex:
    image: linuxserver/plex
    container_name: plex
    restart: unless-stopped
    environment:
      PUID: 65534
      PGID: 1001
      VERSION: docker
    ports:
      - "32400:32400"
    volumes:
      - $APPDATA/plex:/config
      - /bucket/media:/media
      - /mnt/fake:/mnt/fake

  qbt:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbt
    network_mode: "service:gluetun"
    environment:
      PUID: 65534
      PGID: 1001
      TZ: America/Chicago
      WEBUI_PORT: 8475
    volumes:
      - $APPDATA/qbt:/config
      - /mnt/fake/downloads:/downloads
      - /bucket/media/movies:/movies
      - /bucket/media/tv:/tv
      - /bucket/media/syndicated:/syndicated
      - /bucket/media/books:/books
      - /bucket/media/music:/music
      - /bucket/games:/games
      - /mnt/nvme:/nvme
    restart: unless-stopped

  deluge:
    image: linuxserver/deluge
    container_name: deluge
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Chicago
      VPN_ENABLED: "no"
    volumes:
      - $APPDATA/deluge:/config
      - /bucket/media/books:/downloads
    ports:
      - "8112:8112"
      - "8118:8118"
      - "58846:58846"
      - "58946:58946"

  qbt_exporter:
    image: esanchezm/prometheus-qbittorrent-exporter
    container_name: qbt_exporter
    restart: unless-stopped
    ports:
      - "8119:8119"
    environment:
      QBITTORRENT_HOST: "192.168.0.6"
      QBITTORRENT_PORT: 8475
      EXPORTER_PORT: 8119
      QBITTORRENT_USER: admin
      QBITTORRENT_PASS: "${QBITTORRENT_PASS}"
      VERIFY_WEBUI_CERTIFICATE: "false"

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: unless-stopped
    environment:
      PUID: 65534
      PGID: 1001
      TZ: America/Chicago
    volumes:
      - $APPDATA/sonarr:/config
      - /bucket/media/tv:/tv
      - /mnt/fake/downloads:/downloads
    ports:
      - 7002:8989

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    environment:
      PUID: 65534
      PGID: 1001
      TZ: America/Chicago
    volumes:
      - $APPDATA/radarr:/config
      - /bucket/media/movies:/movies
      - /mnt/fake/downloads:/downloads
    ports:
      - 7003:7878

  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      PUID: 65534
      PGID: 1001
      TZ: America/Chicago
    volumes:
      - $APPDATA/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  overseerr:
    image: linuxserver/overseerr
    container_name: overseerr
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Chicago
    volumes:
      - $APPDATA/overseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped

  tautulli:
    image: linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Chicago
    volumes:
      - $APPDATA/tautulli:/config
    ports:
      - 8181:8181
    restart: unless-stopped

  tautulli-exporter:
    image: nwalke/tautulli_exporter
    container_name: tautulli-exporter
    environment:
      TAUTULLI_API_KEY: "${TAUTULLI_KEY}"
      TAUTULLI_URI: http://192.168.0.6:8181
    volumes:
      - $APPDATA/tautulli:/config
    ports:
      - 9487:9487
    restart: unless-stopped

  # handbreak:
  #   image: jlesage/handbrake
  #   container_name: handbrake
  #   ports:
  #     - 5800:5800
  #   volumes:
  #     - $APPDATA/handbreak:/config
  #     - /bucket/media/tv:/watch
  #     - /bucket/media/tv:/output
  #   environment:
  #     AUTOMATED_CONVERSION: 1
  #     AUTOMATED_CONVERSION_PRESET: "GENERAL/Fast 1080p30"
  #     AUTOMATED_CONVERSION_KEEP_SOURCE: 0
  #     AUTOMATED_CONVERSION_OUTPUT_SUBDIR: SAME_AS_SRC
  #     AUTOMATED_CONVERSION_VIDEO_FILE_EXTENSIONS: "ts"

  files:
    image: svenstaro/miniserve
    container_name: files
    restart: always
    volumes:
      - /bucket/media:/tmp/media
      - /mnt/fake/downloads:/tmp/downloads
    ports:
      - 8080:8080
    command: /tmp

  # send:
  #   image: registry.gitlab.com/timvisee/send:latest
  #   restart: always
  #   user: "0"
  #   ports:
  #     - '8383:8383'
  #   volumes:
  #     - send:/uploads
  #   environment:
  #     - DHPARAM_GENERATION=false
  #     - NODE_ENV=production
  #     - DETECT_BASE_URL=true
  #     - PORT=8383
  #     - REDIS_HOST=redis
  #     - FILE_DIR=/uploads
  #     - MAX_FILE_SIZE=21474836480

  # redis:
  #   image: redis:alpine
  #   restart: always
  #   volumes:
  #     - send-redis:/data

  syncthing:
    image: linuxserver/syncthing:latest
    container_name: syncthing
    environment:
      PUID: 1000
      PGID: 1000
      TZ: America/Chicago
    volumes:
      - $APPDATA/syncthing:/config
      - /bucket/backup/syncthing:/data
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped

  # photoprism:
  #   image: photoprism/photoprism:latest
  #   container_name: photoprism
  #   depends_on:
  #     - mariadb
  #   security_opt:
  #     - seccomp:unconfined
  #     - apparmor:unconfined
  #   ports:
  #     - "2342:2342"
  #   environment:
  #     PHOTOPRISM_ADMIN_USER: "admin"
  #     PHOTOPRISM_ADMIN_PASSWORD: "${QBITTORRENT_PASS}"
  #     PHOTOPRISM_AUTH_MODE: "password"
  #     PHOTOPRISM_SITE_URL: "https://photos.rileysnyder.org/"
  #     PHOTOPRISM_ORIGINALS_LIMIT: 500000
  #     PHOTOPRISM_HTTP_COMPRESSION: "gzip"
  #     PHOTOPRISM_LOG_LEVEL: "info"
  #     PHOTOPRISM_READONLY: "false"
  #     PHOTOPRISM_EXPERIMENTAL: "false"
  #     PHOTOPRISM_DISABLE_CHOWN: "false"
  #     PHOTOPRISM_DISABLE_WEBDAV: "false"
  #     PHOTOPRISM_DISABLE_SETTINGS: "false"
  #     PHOTOPRISM_DISABLE_TENSORFLOW: "false"
  #     PHOTOPRISM_DISABLE_FACES: "false"
  #     PHOTOPRISM_DISABLE_CLASSIFICATION: "false"
  #     PHOTOPRISM_DISABLE_RAW: "false"
  #     PHOTOPRISM_RAW_PRESETS: "false"
  #     PHOTOPRISM_JPEG_QUALITY: 85
  #     PHOTOPRISM_DETECT_NSFW: "false"
  #     PHOTOPRISM_UPLOAD_NSFW: "true"
  #     PHOTOPRISM_DATABASE_DRIVER: "mysql"
  #     PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"
  #     PHOTOPRISM_DATABASE_NAME: "photoprism"
  #     PHOTOPRISM_DATABASE_USER: "photoprism"
  #     PHOTOPRISM_DATABASE_PASSWORD: "${QBITTORRENT_PASS}"
  #     PHOTOPRISM_SITE_CAPTION: "AI-Powered Photos App"
  #     PHOTOPRISM_SITE_DESCRIPTION: ""
  #     PHOTOPRISM_SITE_AUTHOR: ""
  #   working_dir: "/photoprism"
  #   volumes:
  #     - "/bucket/prism:/photoprism/originals"
  #     # - "/bucket/photos:/photoprism/import"
  #     - "/bucket/backup/syncthing/phone-pictures:/photoprism/import/pictures"
  #     - "/bucket/backup/syncthing/phone-camera:/photoprism/import/camera"
  #     - "$APPDATA/photoprism:/photoprism/storage"

  # ofelia:
  #   restart: unless-stopped
  #   image: mcuadros/ofelia:latest
  #   container_name: ofelia
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #     - "$APPDATA/photoprism/photoprism.ini:/etc/ofelia/config.ini"

  # mariadb:
  #   restart: unless-stopped
  #   image: mariadb:10.10
  #   security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
  #     - seccomp:unconfined
  #     - apparmor:unconfined
  #   command: mysqld --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
  #   volumes:
  #     - "$APPDATA/photoprism-db:/var/lib/mysql"
  #   environment:
  #     MARIADB_AUTO_UPGRADE: "1"
  #     MARIADB_INITDB_SKIP_TZINFO: "1"
  #     MARIADB_DATABASE: "photoprism"
  #     MARIADB_USER: "photoprism"
  #     MARIADB_PASSWORD: "${QBITTORRENT_PASS}"
  #     MARIADB_ROOT_PASSWORD: "${QBITTORRENT_PASS}"

  # discord-minecraft-server-stats:
  #   image: ghcr.io/rssnyder/discord-minecraft-server-stats:0.0.3
  #   environment:
  #     TOKEN: "${MINECRAFT_DISCORD_TOKEN}"
  #     DOMAIN: yourearat.com
  #     STATUS: 0
  #     LOOP: 15
  #     USERS: 5
  
  vhssnyder:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: vhssnyder
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      # - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    volumes:
      - jellyfin:/config
      - /bucket/media/vhs/snyder:/data/vhs
      # - /path/to/movies:/data/movies
    ports:
      - 8096:8096
      # - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped

  vhsbothwell:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: vhsbothwell
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      # - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    volumes:
      - jellyfinbothwell:/config
      - /bucket/media/vhs/bothwell:/data/vhs
      # - /path/to/movies:/data/movies
    ports:
      - 8097:8096
      # - 8920:8920 #optional
      - 7360:7359/udp #optional
      - 1901:1900/udp #optional
    restart: unless-stopped
  
  # scrypted:
  #   image: koush/scrypted
  #   environment:
  #     - SCRYPTED_WEBHOOK_UPDATE_AUTHORIZATION=Bearer XXYYZZ
  #     - SCRYPTED_WEBHOOK_UPDATE=http://localhost:10444/v1/update
  #     # nvidia support
  #     # - NVIDIA_VISIBLE_DEVICES=all
  #     # - NVIDIA_DRIVER_CAPABILITIES=all
  #   # runtime: nvidia
  #   container_name: scrypted
  #   restart: unless-stopped
  #   network_mode: host

  #   # devices:
  #     # hardware accelerated video decoding, opencl, etc.
  #     # - /dev/dri:/dev/dri
  #     # uncomment below as necessary.
  #     # zwave usb serial device
  #     #   - /dev/ttyACM0:/dev/ttyACM0
  #     # all usb devices, such as coral tpu
  #     #   - /dev/bus/usb:/dev/bus/usb
  #     # coral PCI devices
  #     # - /dev/apex_0:/dev/apex_0
  #     # - /dev/apex_1:/dev/apex_1

  #   volumes:
  #     - $APPDATA/scrypted:/server/volume
  #     # modify and add the additional volume for Scrypted NVR
  #     # the following example would mount the /mnt/sda/video path on the host
  #     # to the /nvr path inside the docker container.
  #     # - /mnt/sda/video:/nvr

  #     # or use a network mount from one of the examples above
  #     # - type: volume
  #     #   source: nvr
  #     #   target: /nvr
  #     #   volume:
  #     #     nocopy: true

  #     # uncomment the following lines to expose Avahi, an mDNS advertiser.
  #     # make sure Avahi is running on the host machine, otherwise this will not work.
  #     # - /var/run/dbus:/var/run/dbus
  #     # - /var/run/avahi-daemon/socket:/var/run/avahi-daemon/socket
  #   # logging is noisy and will unnecessarily wear on flash storage.
  #   # scrypted has per device in memory logging that is preferred.
  #   logging:
  #     driver: "json-file"
  #     options:
  #         max-size: "10m"
  #         max-file: "10"
  #   labels:
  #     - "com.centurylinklabs.watchtower.scope=scrypted"

  # # watchtower manages updates for Scrypted.
  # watchtower:
  #   environment:
  #     - WATCHTOWER_HTTP_API_TOKEN=XXYYZZ
  #     - WATCHTOWER_HTTP_API_UPDATE=true
  #     - WATCHTOWER_SCOPE=scrypted
  #     # remove the following line to never allow docker to auto update.
  #     # this is not recommended.
  #     - WATCHTOWER_HTTP_API_PERIODIC_POLLS=true
  #   image: containrrr/watchtower
  #   container_name: scrypted-watchtower
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   labels:
  #     - "com.centurylinklabs.watchtower.scope=scrypted"
  #   ports:
  #       # The auto update port 10444 can be configured
  #       # Must match the port in the auto update url above.
  #     - 10444:8080
  #   # check for updates once an hour (interval is in seconds)
  #   command: --interval 3600 --cleanup --scope scrypted

volumes:
  send-redis:
  send:
  pigallery2:
  torch:
  huggingface:
  jellyfin:
  jellyfinbothwell:
  proxy:
  gitness:
