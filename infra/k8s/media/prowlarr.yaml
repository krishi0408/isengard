apiVersion: v1
kind: ConfigMap
metadata:
  name: prowlarr-env
  namespace: {{ .Values.namespace }}
  labels:
    app: prowlarr
data:
  WEBUI_PORT: {{ .Values.prowlarr.port }}
  PUID: {{ .Values.PUID }}
  PGID: {{ .Values.PGID }}
  TZ: {{ .Values.timezone }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      containers:
      - name: prowlarr
        image: {{ .Values.prowlarr.image }}
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: prowlarr-env
        ports:
        - name: webui
          containerPort: {{ .Values.prowlarr.port }}
        volumeMounts:
        - name: config
          mountPath: /config
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: prowlarr

---
apiVersion: v1
kind: Service
metadata:
  name: prowlarr
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.prowlarr.service.type }}
  selector:
    app: prowlarr
  ports:
  - name: webui
    port: {{ .Values.prowlarr.service.port }}
    targetPort: webui

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prowlarr
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: {{ .Values.prowlarr.pvc.storageClassName }}
  resources:
    requests:
      storage: {{ .Values.prowlarr.pvc.size }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prowlarr
  namespace: {{ .Values.namespace }}
spec:
  ingressClassName: nginx
  rules:
    - host: prowlarr.{{ .Values.ingress.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name:  prowlarr
                port:
                  number: {{ .Values.prowlarr.service.port }}