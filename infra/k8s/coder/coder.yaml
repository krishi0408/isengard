apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.namespace }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
    spec:
      containers:
      - name: coder
        image: {{ .Values.image }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: home
          mountPath: /home/coder
      - name: dind
        image: docker:dind
        securityContext:
          privileged: true
        volumeMounts:
          - name: dind-vol
            mountPath: /var/run
      volumes:
      - name: dind-vol
        emptyDir:
      - name: home
        persistentVolumeClaim:
          claimName: coder

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
spec:
  type: LoadBalancer
  selector:
    app: {{ .Values.app }}
  ports:
  - name: web
    port: 80
    targetPort: 8080

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 25Gi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.org/websocket-services: {{ .Values.app }}
    nginx.org/server-snippets: |
      location / {
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection upgrade;
        proxy_set_header Accept-Encoding gzip;
      }
spec:
  ingressClassName: nginx
  rules:
    - host: {{ .Values.app }}.{{ .Values.domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name:  {{ .Values.app }}
                port:
                  number: 80

# ---
# apiVersion: ccm.harness.io/v1
# kind: AutoStoppingRule
# metadata:
#   name: {{ .Values.app }}
#   namespace: {{ .Values.namespace }}
#   annotations:
#     harness.io/cloud-connector-id: {{ .Values.autostop.cloudConnectorId }}
# spec:
#   service:
#     name: {{ .Values.app }}
#     port: 80
#   ingress:
#     name: {{ .Values.app }}
#     controllerName: {{ .Values.autostop.controllerName }}
#   idleTimeMins: {{ .Values.autostop.idleTimeMins }}
#   hideProgressPage: false
#   dependencies: []