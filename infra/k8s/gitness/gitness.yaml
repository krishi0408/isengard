apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.namespace }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.app }}-env
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.app }}
data:
  GITNESS_USER_SIGNUP_ENABLED: "false"
  GITNESS_NESTED_SPACES_ENABLED: "true"
  GITNESS_URL_BASE: "https://{{ .Values.app }}.{{ .Values.domain }}"
  GITNESS_URL_GIT: "https://{{ .Values.app }}.{{ .Values.domain }}/git"
  GITNESS_URL_API: "https://{{ .Values.app }}.{{ .Values.domain }}/api"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
    spec:
      containers:
      - name: gitness
        image: {{ .Values.image }}
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: {{ .Values.app }}-env
        volumeMounts:
        - name: dind-vol
          mountPath: /var/run
        - name: gitness-vol
          mountPath: /data
      - name: dind
        image: docker:dind
        securityContext:
          privileged: true
        volumeMounts:
          - name: dind-vol
            mountPath: /var/run
      volumes:
      - name: dind-vol
        emptyDir:
      - name: gitness-vol
        persistentVolumeClaim:
          claimName: gitness-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
spec:
  type: LoadBalancer
  selector:
    app: {{ .Values.app }}
  ports:
  - name: web
    port: 80
    targetPort: 3000

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.app }}-pvc
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 5Gi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
spec:
  ingressClassName: nginx
  rules:
    - host: {{ .Values.app }}.{{ .Values.domain }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name:  {{ .Values.app }}
                port:
                  number: 80

---
apiVersion: ccm.harness.io/v1
kind: AutoStoppingRule
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
  annotations:
    harness.io/cloud-connector-id: {{ .Values.autostop.cloudConnectorId }}
spec:
  service:
    name: {{ .Values.app }}
    port: 80
  ingress:
    name: {{ .Values.app }}
    controllerName: {{ .Values.autostop.controllerName }}
  idleTimeMins: {{ .Values.autostop.idleTimeMins }}
  hideProgressPage: false
  dependencies: []